{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\School\\SChoolCom\\Controller\\login.js:19:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-03-09T04:09:39.625Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:13:58.481Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:13:58.516Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\School\\SChoolCom\\Middleware\\logins.js:5:16)\n    at newFn (D:\\Practice\\School\\SChoolCom\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\School\\SChoolCom\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\School\\SChoolCom\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\School\\SChoolCom\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-03-09T04:13:59.782Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:14:37.766Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:14:37.793Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:15:06.894Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:15:06.920Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:15:41.209Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:15:41.243Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:17:43.933Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:17:43.963Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:20:24.224Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:20:24.256Z"}
{"message":"Must have a string or function for $where","stack":"Error: Must have a string or function for $where\n    at cast (D:\\Practice\\School\\SChoolCom\\node_modules\\mongoose\\lib\\cast.js:66:15)\n    at model.Query.Query.cast (D:\\Practice\\School\\SChoolCom\\node_modules\\mongoose\\lib\\query.js:4685:12)\n    at model.Query.Query._castConditions (D:\\Practice\\School\\SChoolCom\\node_modules\\mongoose\\lib\\query.js:1862:10)\n    at model.Query.<anonymous> (D:\\Practice\\School\\SChoolCom\\node_modules\\mongoose\\lib\\query.js:1889:8)\n    at model.Query._wrappedThunk [as _find] (D:\\Practice\\School\\SChoolCom\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\School\\SChoolCom\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","level":"error","timestamp":"2020-03-09T04:20:26.664Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:25:12.765Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:25:12.793Z"}
{"message":"unknown top level operator: $is_active","stack":"MongoError: unknown top level operator: $is_active\n    at MessageStream.messageHandler (D:\\Practice\\School\\SChoolCom\\node_modules\\mongodb\\lib\\cmap\\connection.js:261:20)\n    at MessageStream.emit (events.js:210:5)\n    at processIncomingData (D:\\Practice\\School\\SChoolCom\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (D:\\Practice\\School\\SChoolCom\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at doWrite (_stream_writable.js:431:12)\n    at writeOrBuffer (_stream_writable.js:415:5)\n    at MessageStream.Writable.write (_stream_writable.js:305:11)\n    at Socket.ondata (_stream_readable.js:727:22)\n    at Socket.emit (events.js:210:5)\n    at addChunk (_stream_readable.js:309:12)\n    at readableAddChunk (_stream_readable.js:290:11)\n    at Socket.Readable.push (_stream_readable.js:224:10)\n    at TCP.onStreamRead (internal/stream_base_commons.js:182:23)","ok":0,"errmsg":"unknown top level operator: $is_active","code":2,"codeName":"BadValue","name":"MongoError","level":"error","timestamp":"2020-03-09T04:25:15.637Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:25:31.937Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:25:31.966Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T04:25:43.548Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T04:25:43.573Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:20:15.281Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:20:15.310Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:22:33.830Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:22:33.856Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:23:56.004Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:23:56.030Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:37:14.013Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:37:14.043Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:37:30.623Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:37:30.652Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:37:51.502Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:37:51.528Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:43:04.059Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:43:04.083Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:52:51.344Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:52:51.369Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:53:08.959Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:53:08.985Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:53:25.540Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:53:25.565Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:53:26.316Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:53:26.347Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:53:58.307Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:53:58.336Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:55:13.905Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:55:13.932Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:56:34.668Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:56:34.694Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:57:34.727Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:57:34.755Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:57:57.021Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:57:57.050Z"}
{"level":"info","message":"Server listing on port 3000","timestamp":"2020-03-09T05:58:04.019Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-03-09T05:58:04.048Z"}
